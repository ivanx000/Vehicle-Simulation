#BlueJ class context
comment0.target=Vehicle
comment0.text=\r\n\ This\ is\ the\ superclass\ for\ Vehicles.\r\n\ \r\n
comment1.params=
comment1.target=boolean\ checkHitPedestrian()
comment10.params=delta
comment10.target=void\ increaseSpeed(double)
comment11.params=
comment11.target=void\ drive()
comment11.text=\r\n\ Method\ that\ deals\ with\ movement.\ Speed\ can\ be\ set\ by\ individual\ subclasses\ in\ their\ constructors\r\n
comment12.params=
comment12.target=double\ getSpeed()
comment12.text=\r\n\ An\ accessor\ that\ can\ be\ used\ to\ get\ this\ Vehicle's\ speed.\ Used,\ for\ example,\ when\ a\ vehicle\ wants\ to\ see\r\n\ if\ a\ faster\ vehicle\ is\ ahead\ in\ the\ lane.\r\n
comment2.params=origin
comment2.target=Vehicle(VehicleSpawner)
comment3.params=w
comment3.target=void\ addedToWorld(greenfoot.World)
comment3.text=\r\n\ This\ method\ is\ called\ automatically\ when\ the\ Vehicle\ is\ added\ to\ the\ World,\ and\ places\r\n\ the\ Vehicle\ just\ off\ screen\ (centered\ 100\ pixels\ beyond\ the\ center\ of\ the\ lane\ spawner)\r\n\ so\ it\ will\ appear\ to\ roll\ onto\ the\ screen\ smoothly.\r\n
comment4.params=
comment4.target=void\ act()
comment4.text=\r\n\ The\ superclass\ Vehicle's\ act()\ method.\ This\ can\ be\ called\ by\ a\ Vehicle\ subclass\ object\ \r\n\ (for\ example,\ by\ a\ Car)\ in\ two\ ways\:\r\n\ -\ If\ the\ Vehicle\ simply\ does\ NOT\ have\ a\ method\ called\ public\ void\ act(),\ this\ will\ be\ called\r\n\ \ \ instead.\ \r\n\ -\ subclass'\ act()\ method\ can\ invoke\ super.act()\ to\ call\ this,\ as\ is\ demonstrated\ here.\r\n
comment5.params=theDirection
comment5.target=boolean\ changeLanes(int)
comment6.params=theDirection
comment6.target=boolean\ availableLane(int)
comment6.text=\r\n\ A\ method\ used\ by\ all\ Vehicles\ to\ check\ if\ they\ are\ at\ the\ edge.\r\n\ \r\n\ Note\ that\ this\ World\ is\ set\ to\ unbounded\ (The\ World's\ super\ class\ is\ (int,\ int,\ int,\ FALSE)\ which\ means\r\n\ that\ objects\ should\ not\ be\ stopped\ from\ leaving\ the\ World.\ However,\ this\ introduces\ a\ challenge\ as\ there\r\n\ is\ the\ potential\ for\ objects\ to\ disappear\ off-screen\ but\ still\ be\ fully\ acting\ and\ thus\ wasting\ resources\r\n\ and\ affecting\ the\ simulation\ even\ though\ they\ are\ not\ visible.\r\n
comment7.params=
comment7.target=boolean\ checkEdge()
comment8.params=
comment8.target=void\ repelPedestrians()
comment9.params=nearbyObjects\ minDistance
comment9.target=void\ pushAwayFromObjects(java.util.ArrayList,\ double)
comment9.text=\r\n\ New\ repel\ method\!\ Seems\ to\ work\ well.\ Can\ be\ used\ in\ both\ directions,\ but\ for\ now\r\n\ commented\ out\ movement\ on\ x\ so\ players\ are\ only\ "repelled"\ in\ a\ y-direction.\r\n\ \r\n\ @author\ Mr\ Cohen\r\n\ @since\ February\ 2023\r\n
numComments=13
